## Executar na VM Registry
openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout app-tls.key -out app-tls.crt -subj "/CN=app.4labs.example/O=4Labs/OU=Example"

kubectl create secret tls certificado-app-tls --key app-tls.key --cert app-tls.crt

cat 1750/docker-kubernetes/labs/aula09/tls-ingress-app.yaml

kubectl apply -f 1750/docker-kubernetes/labs/aula09/tls-ingress-app.yaml

kubectl get ingress

## Gerenciar politica de rede
cat 1750/docker-kubernetes/network-policy/nginx-deploy.yaml
kubectl apply -f 1750/docker-kubernetes/network-policy/nginx-deploy.yaml
kubectl get deploy,service -l app=nginx

## Gerenciar politica de rede

kubectl run --rm -ti busybox --image=busybox /bin/sh
wget --spider --timeout=1 nginx
exit

kubectl apply -f 1750/docker-kubernetes/network-policy/allow-policy.yaml 

kubectl run --rm -ti busybox --image=busybox /bin/sh
wget --spider --timeout=1 nginx
exit

kubectl run --rm -ti --labels="access=true" busybox --image=busybox /bin/sh
wget --spider --timeout=1 nginx
exit

## Politica de rede - bloquear rede
kubectl delete -f 1750/docker-kubernetes/network-policy/allow-policy.yaml

kubectl get pod -l app=nginx -o wide

POD=$(kubectl get pod -l app=nginx -o wide | egrep "worker01|worker02" | awk -F" " '{print $6}' | tail -1)

curl $POD

cat 1750/docker-kubernetes/network-policy/ipblock-policy.yaml

kubectl apply -f 1750/docker-kubernetes/network-policy/ipblock-policy.yaml

curl $POD -v
CTRL + C

kubectl delete -f 1750/docker-kubernetes/network-policy/ipblock-policy.yaml
